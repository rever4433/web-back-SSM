package com.nine.back.mapper;

import java.util.List;


import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import com.nine.back.entity.AdminResource;

public interface AdminResourceMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_resources
     *
     * @mbggenerated Wed Apr 05 12:29:36 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_resources
     *
     * @mbggenerated Wed Apr 05 12:29:36 CST 2017
     */
    int insert(AdminResource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_resources
     *
     * @mbggenerated Wed Apr 05 12:29:36 CST 2017
     */
    int insertSelective(AdminResource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_resources
     *
     * @mbggenerated Wed Apr 05 12:29:36 CST 2017
     */
    AdminResource selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_resources
     *
     * @mbggenerated Wed Apr 05 12:29:36 CST 2017
     */
    int updateByPrimaryKeySelective(AdminResource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_resources
     *
     * @mbggenerated Wed Apr 05 12:29:36 CST 2017
     */
    int updateByPrimaryKey(AdminResource record);
    
    @Select("select ID,RID,PID,NAME,URL,LEAF,STATUS,ORDERID,ICON from t_admin_resources where RID=#{resourceId}")
    AdminResource getAdminResourceByResourceID(Integer resourceId);
    
    @Select("select * from t_admin_resources where PID=#{rolecode}")
    @Results({
    	@Result(id = true, column = "ID", property = "id"),
		@Result(column = "RID", property = "rid"),
		@Result(column = "PID", property = "pid"),
		@Result(column = "NAME", property = "name"),
		@Result(column = "URL", property = "url"),
		@Result(column = "LEAF", property = "leaf"),
		@Result(column = "STATUS", property = "status"),
		@Result(column = "ORDERID", property = "orderid"),
		@Result(column = "ICON", property = "icon")
    })
    List<AdminResource> getAllAdminResourceByRoleCode(String rolecode);
    
    @Select("select * from t_admin_resources where NAME=#{name}")
    List<AdminResource> getAdminResourceByName(String name);
    
    @Delete("DELETE t_admin_resources.*,t_admin_role_resource.* "
    		+ "from t_admin_resources LEFT JOIN t_admin_role_resource "
    		+ "ON t_admin_resources.RID=t_admin_role_resource.RESOURCEID "
    		+ "WHERE t_admin_resources.RID=#{rid}")
    int deleteChildMenu(Integer rid);
    
    @Delete("SELECT t_admin_resources.RID,t_admin_role_resource.* "
    		+ "from t_admin_resources LEFT JOIN t_admin_role_resource "
    		+ "ON t_admin_resources.RID=t_admin_role_resource.RESOURCEID"
    		+ "where PID=#{rid}||RID=#{rid}")
    int deleteAllChildMenu(Integer rid);
    
    @Update("update t_admin_resources set `STATUS`=1 where RID=#{rid}")
    int closeChildMenu(Integer rid);
    
    @Update("update t_admin_resources set `STATUS`=1 where RID=#{0}||PID=#{1}")
    int closeAllchildMenu(Integer rid1,Integer rid2);
}