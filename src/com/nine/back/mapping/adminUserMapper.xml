<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nine.back.mapper.adminUserMapper">
  <resultMap id="BaseResultMap" type="com.nine.back.entity.adminUser">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="REALNAME" jdbcType="VARCHAR" property="realname" />
    <result column="RETRY" jdbcType="DECIMAL" property="retry" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="CREATEDATE" jdbcType="DECIMAL" property="createdate" />
    <result column="LASTDATE" jdbcType="DECIMAL" property="lastdate" />
    <result column="ROLECODE" jdbcType="VARCHAR" property="rolecode" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, USERNAME, PASSWORD, REALNAME, RETRY, STATUS, CREATEDATE, LASTDATE, ROLECODE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_admin_user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_admin_user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nine.back.entity.adminUser">
    insert into t_admin_user (ID, USERNAME, PASSWORD, 
      REALNAME, RETRY, STATUS, 
      CREATEDATE, LASTDATE, ROLECODE
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{retry,jdbcType=DECIMAL}, #{status,jdbcType=DECIMAL}, 
      #{createdate,jdbcType=DECIMAL}, #{lastdate,jdbcType=DECIMAL}, #{rolecode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nine.back.entity.adminUser">
    insert into t_admin_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="realname != null">
        REALNAME,
      </if>
      <if test="retry != null">
        RETRY,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createdate != null">
        CREATEDATE,
      </if>
      <if test="lastdate != null">
        LASTDATE,
      </if>
      <if test="rolecode != null">
        ROLECODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="retry != null">
        #{retry,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=DECIMAL},
      </if>
      <if test="lastdate != null">
        #{lastdate,jdbcType=DECIMAL},
      </if>
      <if test="rolecode != null">
        #{rolecode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nine.back.entity.adminUser">
    update t_admin_user
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        REALNAME = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="retry != null">
        RETRY = #{retry,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="createdate != null">
        CREATEDATE = #{createdate,jdbcType=DECIMAL},
      </if>
      <if test="lastdate != null">
        LASTDATE = #{lastdate,jdbcType=DECIMAL},
      </if>
      <if test="rolecode != null">
        ROLECODE = #{rolecode,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nine.back.entity.adminUser">
    update t_admin_user
    set USERNAME = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      REALNAME = #{realname,jdbcType=VARCHAR},
      RETRY = #{retry,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=DECIMAL},
      CREATEDATE = #{createdate,jdbcType=DECIMAL},
      LASTDATE = #{lastdate,jdbcType=DECIMAL},
      ROLECODE = #{rolecode,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.nine.back.entity.adminUser">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="REALNAME" jdbcType="VARCHAR" property="realname" />
    <result column="RETRY" jdbcType="DECIMAL" property="retry" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="CREATEDATE" jdbcType="DECIMAL" property="createdate" />
    <result column="LASTDATE" jdbcType="DECIMAL" property="lastdate" />
    <result column="ROLECODE" jdbcType="VARCHAR" property="rolecode" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, USERNAME, PASSWORD, REALNAME, RETRY, STATUS, CREATEDATE, LASTDATE, ROLECODE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_admin_user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_admin_user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nine.back.entity.adminUser">
    insert into t_admin_user (ID, USERNAME, PASSWORD, 
      REALNAME, RETRY, STATUS, 
      CREATEDATE, LASTDATE, ROLECODE
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{retry,jdbcType=DECIMAL}, #{status,jdbcType=DECIMAL}, 
      #{createdate,jdbcType=DECIMAL}, #{lastdate,jdbcType=DECIMAL}, #{rolecode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nine.back.entity.adminUser">
    insert into t_admin_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="realname != null">
        REALNAME,
      </if>
      <if test="retry != null">
        RETRY,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createdate != null">
        CREATEDATE,
      </if>
      <if test="lastdate != null">
        LASTDATE,
      </if>
      <if test="rolecode != null">
        ROLECODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="retry != null">
        #{retry,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=DECIMAL},
      </if>
      <if test="lastdate != null">
        #{lastdate,jdbcType=DECIMAL},
      </if>
      <if test="rolecode != null">
        #{rolecode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nine.back.entity.adminUser">
    update t_admin_user
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        REALNAME = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="retry != null">
        RETRY = #{retry,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="createdate != null">
        CREATEDATE = #{createdate,jdbcType=DECIMAL},
      </if>
      <if test="lastdate != null">
        LASTDATE = #{lastdate,jdbcType=DECIMAL},
      </if>
      <if test="rolecode != null">
        ROLECODE = #{rolecode,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nine.back.entity.adminUser">
    update t_admin_user
    set USERNAME = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      REALNAME = #{realname,jdbcType=VARCHAR},
      RETRY = #{retry,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=DECIMAL},
      CREATEDATE = #{createdate,jdbcType=DECIMAL},
      LASTDATE = #{lastdate,jdbcType=DECIMAL},
      ROLECODE = #{rolecode,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.nine.back.entity.adminUser">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="USERNAME" jdbcType="VARCHAR" property="userName" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="REALNAME" jdbcType="VARCHAR" property="realName" />
    <result column="RETRY" jdbcType="DECIMAL" property="retry" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="CREATEDATE" jdbcType="DECIMAL" property="createDate" />
    <result column="LASTDATE" jdbcType="DECIMAL" property="lastDate" />
    <result column="ROLECODE" jdbcType="VARCHAR" property="roleCode" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, USERNAME, PASSWORD, REALNAME, RETRY, STATUS, CREATEDATE, LASTDATE, ROLECODE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_admin_user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_admin_user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nine.back.entity.adminUser">
    insert into t_admin_user (ID, USERNAME, PASSWORD, 
      REALNAME, RETRY, STATUS, 
      CREATEDATE, LASTDATE, ROLECODE
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{retry,jdbcType=DECIMAL}, #{status,jdbcType=DECIMAL}, 
      #{createDate,jdbcType=DECIMAL}, #{lastDate,jdbcType=DECIMAL}, #{roleCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nine.back.entity.adminUser">
    insert into t_admin_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userName != null">
        USERNAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="realName != null">
        REALNAME,
      </if>
      <if test="retry != null">
        RETRY,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createDate != null">
        CREATEDATE,
      </if>
      <if test="lastDate != null">
        LASTDATE,
      </if>
      <if test="roleCode != null">
        ROLECODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="retry != null">
        #{retry,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DECIMAL},
      </if>
      <if test="lastDate != null">
        #{lastDate,jdbcType=DECIMAL},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nine.back.entity.adminUser">
    update t_admin_user
    <set>
      <if test="userName != null">
        USERNAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        REALNAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="retry != null">
        RETRY = #{retry,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        CREATEDATE = #{createDate,jdbcType=DECIMAL},
      </if>
      <if test="lastDate != null">
        LASTDATE = #{lastDate,jdbcType=DECIMAL},
      </if>
      <if test="roleCode != null">
        ROLECODE = #{roleCode,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nine.back.entity.adminUser">
    update t_admin_user
    set USERNAME = #{userName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      REALNAME = #{realName,jdbcType=VARCHAR},
      RETRY = #{retry,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=DECIMAL},
      CREATEDATE = #{createDate,jdbcType=DECIMAL},
      LASTDATE = #{lastDate,jdbcType=DECIMAL},
      ROLECODE = #{roleCode,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>